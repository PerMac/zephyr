name: Code Coverage with codecov

on:
  dispatch

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.event_name }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  codecov:
    runs-on: ubuntu-24.04
    container:
      image: ghcr.io/zephyrproject-rtos/ci-repo-cache:v0.28.1.20250624
      options: '--entrypoint /bin/bash'
    strategy:
      fail-fast: false
      matrix:
        platform: ["native_sim"]
        include:
          - platform: 'native_sim'
            normalized: 'native_sim'
    env:
      CCACHE_DIR: /node-cache/ccache-zephyr
      CCACHE_REMOTE_STORAGE: "redis://cache-*.keydb-cache.svc.cluster.local|shards=1,2,3"
      CCACHE_REMOTE_ONLY: "true"
      # `--specs` is ignored because ccache is unable to resovle the toolchain specs file path.
      CCACHE_IGNOREOPTIONS: '-specs=* --specs=*'
    steps:
      - name: Apply container owner mismatch workaround
        run: |
          # FIXME: The owner UID of the GITHUB_WORKSPACE directory may not
          #        match the container user UID because of the way GitHub
          #        Actions runner is implemented. Remove this workaround when
          #        GitHub comes up with a fundamental fix for this problem.
          git config --global --add safe.directory ${GITHUB_WORKSPACE}

      - name: Print cloud service information
        run: |
          echo "ZEPHYR_RUNNER_CLOUD_PROVIDER = ${ZEPHYR_RUNNER_CLOUD_PROVIDER}"
          echo "ZEPHYR_RUNNER_CLOUD_NODE = ${ZEPHYR_RUNNER_CLOUD_NODE}"
          echo "ZEPHYR_RUNNER_CLOUD_POD = ${ZEPHYR_RUNNER_CLOUD_POD}"

      - name: Update PATH for west
        run: |
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Clone cached Zephyr repository
        continue-on-error: true
        run: |
          git clone --shared /repo-cache/zephyrproject/zephyr .
          git remote set-url origin ${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}

      - name: checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: 3.12
          cache: pip
          cache-dependency-path: scripts/requirements-actions.txt

      - name: Install Python packages
        run: |
          pip install -r scripts/requirements-actions.txt --require-hashes

      - name: west setup
        run: |
          west init -l . || true
          west update 1> west.update.log || west update 1> west.update-2.log

      - name: Environment Setup
        run: |
          cmake --version
          gcc --version
          ls -la

          echo "ZEPHYR_SDK_INSTALL_DIR=/opt/toolchains/zephyr-sdk-$( cat SDK_VERSION )" >> $GITHUB_ENV

      - name: Set up ccache
        run: |
          mkdir -p ${CCACHE_DIR}
          ccache -M 10G
          ccache -p
          ccache -z -s -vv

      - name: Run Tests with Twister (Push)
        continue-on-error: true
        run: |
          export ZEPHYR_BASE=${PWD}
          export ZEPHYR_TOOLCHAIN_VARIANT=zephyr
          mkdir -p coverage/reports
          ./scripts/twister --save-tests ${{matrix.normalized}}-testplan.json
          ls -la
          ./scripts/twister \
            -i --force-color -N -v --filter runnable -p ${{ matrix.platform }} --coverage \
            -T tests --coverage-tool gcovr -xCONFIG_TEST_EXTRA_STACK_SIZE=4096 -e nano \
            --timeout-multiplier 2 --coverage-per-instance

      - name: Print ccache stats
        if: always()
        run: |
          ccache -s -vv

      - name: Rename coverage files
        if: always()
        run: |
          mv twister-out/coverage.json coverage/reports/${{matrix.normalized}}.json
          DEST_DIR="coverage/individual"

          # Create the destination directory if it doesn't exist
          mkdir -p "$DEST_DIR"

          # Find all coverage.json files and copy them with new names
          find . -type f -name "coverage.json" | while read -r file; do
            echo $(basename "$(dirname "$file")")
            parent_dir=$(basename "$(dirname "$file")")
            cp "$file" "$DEST_DIR/${parent_dir}.json"
          done

          echo "All coverage.json files have been copied to $DEST_DIR."


      - name: Upload Coverage Results
        if: always()
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: Coverage Data (Subset ${{ matrix.normalized }})
          path: |
            coverage/reports/${{ matrix.normalized }}.json
            ${{ matrix.normalized }}-testplan.json
            coverage/individual